<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1492181986017">{:repl-history {:ide [], :local [{:command &quot;(ns async-tea-party.core\n  (:require [clojure.core.async :as async]))&quot;, :offset 69, :ns &quot;async-tea-party.core&quot;} {:command &quot;(def tea-channel (async/chan))&quot;, :offset 30, :ns &quot;async-tea-party.core&quot;} {:command &quot;(def tea-channel1 (async/chan))&quot;, :offset 31, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! tea-channel :cup-of-tea)&quot;, :offset 35, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! tea-channel :cup-of-tea2)&quot;, :offset 36, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! tea-channel :cup-of-tea3)&quot;, :offset 36, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! tea-channel :cup-of-tea4)&quot;, :offset 36, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/close! tea-channel)&quot;, :offset 26, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! tea-channel :cup-of-tea5)&quot;, :offset 36, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&lt;!! tea-channel)&quot;, :offset 23, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! tea-channel nil)&quot;, :offset 27, :ns &quot;async-tea-party.core&quot;} {:command &quot;(let [tea-channel (async/chan)]\n  (async/go (async/&gt;! tea-channel :cup-of-tea))\n  (async/go (println \&quot;Thanks for the \&quot; (async/&lt;! tea-channel))))&quot;, :offset 144, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! tea-channel :hot-cup-of-tea)&quot;, :offset 39, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/go-loop []\n               (println \&quot;Thanks for the \&quot; (async/&lt;! tea-channel))\n               (recur))&quot;, :offset 107, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! tea-channel :tea-with-sugar)&quot;, :offset 39, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! tea-channel :tea-with-milk)&quot;, :offset 38, :ns &quot;async-tea-party.core&quot;} {:command &quot;(def tea-channel (async/chan 10))&quot;, :offset 33, :ns &quot;async-tea-party.core&quot;} {:command &quot;(def milk-channel (async/chan 10))&quot;, :offset 34, :ns &quot;async-tea-party.core&quot;} {:command &quot;(def sugar-channel (async/chan 10))&quot;, :offset 35, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/go-loop []\n               (let [[v ch] (async/alts! [tea-channel\n                                          milk-channel\n                                          sugar-channel])]\n                 (println \&quot;Got \&quot; v \&quot; from \&quot; ch)\n                 (recur)))&quot;, :offset 260, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! sugar-channel :sugar)&quot;, :offset 32, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! milk-channel :milk)&quot;, :offset 30, :ns &quot;async-tea-party.core&quot;} {:command &quot;(async/&gt;!! tea-channel :tea)&quot;, :offset 28, :ns &quot;async-tea-party.core&quot;} {:command &quot;(ns async-tea-party.fastest-tea-service\n  (:require [clojure.core.async :as async]))&quot;, :offset 84, :ns &quot;async-tea-party.fastest-tea-service&quot;} {:command &quot;(def google-tea-service-chan (async/chan 10))&quot;, :offset 45, :ns &quot;async-tea-party.fastest-tea-service&quot;} {:command &quot;(def yahoo-tea-serviec-chan (async/chan 10))&quot;, :offset 44, :ns &quot;async-tea-party.fastest-tea-service&quot;} {:command &quot;(defn random-add []\n  (reduce + (conj [] (repeat 1 (rand-int 1000000)))))&quot;, :offset 73, :ns &quot;async-tea-party.fastest-tea-service&quot;} {:command &quot;(defn request-google-tea-service []\n  (async/go\n    (random-add)\n    (async/&gt;! google-tea-service-chan\n              \&quot;tea comliments of google\&quot;)))&quot;, :offset 146, :ns &quot;async-tea-party.fastest-tea-service&quot;} {:command &quot;(def yahoo-tea-service-chan (async/chan 10))&quot;, :offset 44, :ns &quot;async-tea-party.fastest-tea-service&quot;} {:command &quot;(defn request-yahoo-tea-service []\n  (async/go\n    (random-add)\n    (async/&gt;! yahoo-tea-service-chan\n              \&quot;tea comliments of yahoo\&quot;)))&quot;, :offset 143, :ns &quot;async-tea-party.fastest-tea-service&quot;} {:command &quot;(defn request-tea []\n  (request-google-tea-service)\n  (request-yahoo-tea-service)\n  (async/go (let [[v] (async/alts!\n                        [google-tea-service-chan\n                         yahoo-tea-service-chan])]\n              (println v))))&quot;, :offset 245, :ns &quot;async-tea-party.fastest-tea-service&quot;} {:command &quot;(request-tea)&quot;, :offset 13, :ns &quot;async-tea-party.fastest-tea-service&quot;}], :remote []}}</component>
</project>